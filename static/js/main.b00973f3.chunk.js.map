{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/Loader.jsx","components/News.jsx","components/Homepage.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","type","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Loader","demoImage","Text","Typography","Option","Select","News","setNewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","i","href","rel","image","thumbnail","contentUrl","description","length","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","stats","console","log","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","volume","numberOfMarkets","marketShare","HTMLReactParser","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimeperiod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","App","path","element","style","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.b00973f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\n\nimport icon from \"../images/cryptocurrency.png\";\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\">Cryptoverse</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => setActiveMenu(!activeMenu)}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />}>\n            <Link to=\"/exchanges\">Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"f884b6de58msh0ce6fc0a5668e45p119799jsn16ec29381aae\",\n};\n\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest(\"/exchanges\"),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) =>\n        createRequest(`coin/${coinId}/history/${timeperiod}`),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery,\n} = cryptoApi;\n","import millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { useEffect, useState } from \"react\";\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 200;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return \"Loading...\";\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            type=\"text\"\n            placeholder=\"Search Crypto Currency\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={\n                  <img\n                    className=\"crypto-image\"\n                    src={currency.iconUrl}\n                    alt=\"crypto\"\n                  />\n                }\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {millify(currency.change)}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsHeaders = {\n  \"x-bingapis-sdk\": \"true\",\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"f884b6de58msh0ce6fc0a5668e45p119799jsn16ec29381aae\",\n};\n\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\n        ),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport Loader from \"./Loader\";\n\nconst demoImage =\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 12,\n  });\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\n            {data?.data?.coins?.map((currency) => (\n              <Option value={currency.name}>{currency.name}</Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\n                  alt=\"\"\n                />\n              </div>\n              <p>\n                {news.description.length > 100\n                  ? `${news.description.substring(0, 100)}...`\n                  : news.description}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImage\n                    }\n                    alt=\"\"\n                  />\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text>\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Cryptocurrencies from \"./Cryptocurrencies\";\nimport News from \"./News\";\nimport Loader from \"./Loader\";\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  console.log(data);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">\n        Global Crypto Stats\n      </Title>\n      <Row gutter={[32, 32]}>\n        <Col span={12}>\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={millify(globalStats.totalExchanges)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap:\"\n            value={millify(globalStats.totalMarketCap)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={millify(globalStats.total24hVolume)}\n          />\n        </Col>\n\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={millify(globalStats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptos In The World\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/cryptocurrencies\">Show more</Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={3}>\n          <Link to=\"/news\">Show more</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\n\nimport { useGetExchangesQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{exchange.rank}.</strong>\n                      </Text>\n                      <Avatar\n                        className=\"exchange-image\"\n                        src={exchange.iconUrl}\n                      />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || \"\")}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(\n      new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString()\n    );\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: \"Price In USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: \"#0071bd\",\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName} Price Chart\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            Change: {coinHistory?.data?.change}%\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price: $ {currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\n\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\nimport LineChart from \"./LineChart\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timeperiod, setTimeperiod] = useState(\"7d\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\n    coinId,\n    timeperiod,\n  });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in US Dollar (USD). View value\n          statistics, market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Timeperiod\"\n        onChange={(value) => setTimeperiod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>\n              An overview showing the statistics of {cryptoDetails.name}, such\n              as the base and quote currency, the rank, and trading volume.\n            </p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Stats Info\n            </Title>\n            <p>\n              An overview showing the statistics of {cryptoDetails.name}, such\n              as the base and quote currency, the rank, and trading volume.\n            </p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}?\n          </Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n          </Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">\n                {link.type}\n              </Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import \"./App.css\";\nimport { Routes, Route, BrowserRouter, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\n\nimport Navbar from \"./components/Navbar\";\nimport Homepage from \"./components/Homepage\";\nimport Exchanges from \"./components/Exchanges\";\nimport Cryptocurrencies from \"./components/Cryptocurrencies\";\nimport CryptoDetails from \"./components/CryptoDetails\";\nimport News from \"./components/News\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <div className=\"navbar\">\n          <Navbar />\n        </div>\n        <div className=\"main\">\n          <Layout>\n            <div className=\"routes\">\n              <Routes>\n                <Route path=\"/\" element={<Homepage />} />\n                <Route path=\"/exchanges\" element={<Exchanges />} />\n\n                <Route\n                  path=\"/cryptocurrencies\"\n                  element={<Cryptocurrencies />}\n                />\n\n                <Route path=\"/crypto/:coinId\" element={<CryptoDetails />} />\n\n                <Route path=\"/news\" element={<News />} />\n              </Routes>\n            </div>\n          </Layout>\n\n          <div className=\"footer\">\n            <Typography.Title\n              level={5}\n              style={{ color: \"white\", textAlign: \"center\" }}\n            >\n              Crypto <br />\n              All rights reserved\n            </Typography.Title>\n            <Space>\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/exchanges\">Exchanges</Link>\n              <Link to=\"/news\">News</Link>\n            </Space>\n          </div>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"antd/dist/antd.css\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}